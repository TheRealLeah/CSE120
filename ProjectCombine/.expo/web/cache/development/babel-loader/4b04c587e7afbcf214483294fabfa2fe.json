{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eivan\\\\Desktop\\\\Spring2021\\\\SE\\\\CSE120\\\\projectcombine\\\\navigation\\\\DrawerNavigator.tsx\",\n    _this = this;\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nvar Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator(props) {\n  var currentUser = props.currentUser;\n  console.log({\n    currentUser: currentUser\n  });\n\n  if (currentUser.accountType === \"Volunteer\") {\n    return React.createElement(Drawer.Navigator, {\n      drawerContentOptions: {\n        activeTintColor: \"red\",\n        labelStyle: {\n          fontFamily: \"Verdana\",\n          color: \"#ff6623\"\n        }\n      },\n      drawerStyle: {\n        backgroundColor: \"#fbc956\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      options: iconContainer.homeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileNavigator,\n      options: iconContainer.profileIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Notification\",\n      component: NotificationNavigator,\n      options: iconContainer.notificationIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Event\",\n      component: EventNavigator,\n      options: iconContainer.eventIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Help\",\n      component: HelpNavigator,\n      options: iconContainer.helpIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Logout\",\n      component: LogoutNavigator,\n      options: iconContainer.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Drawer.Navigator, {\n      drawerContentOptions: {\n        activeTintColor: \"red\",\n        labelStyle: {\n          fontFamily: \"Verdana\",\n          color: \"#ff6623\"\n        }\n      },\n      drawerStyle: {\n        backgroundColor: \"#fbc956\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      options: iconContainer.homeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileNavigator,\n      options: iconContainer.profileIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Notification\",\n      component: NotificationNavigator,\n      options: iconContainer.notificationIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Event\",\n      component: EventNavigator,\n      options: iconContainer.eventIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Help\",\n      component: HelpNavigator,\n      options: iconContainer.helpIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Logout\",\n      component: LogoutNavigator,\n      options: iconContainer.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }));\n  }\n}\n\nvar iconContainer = {\n  homeIcon: {\n    drawerIcon: function drawerIcon(_ref) {\n      var focused = _ref.focused,\n          size = _ref.size;\n      return React.createElement(Ionicons, {\n        name: \"md-home\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  profileIcon: {\n    drawerIcon: function drawerIcon(_ref2) {\n      var focused = _ref2.focused,\n          size = _ref2.size;\n      return React.createElement(Ionicons, {\n        name: \"person-sharp\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  notificationIcon: {\n    drawerIcon: function drawerIcon(_ref3) {\n      var focused = _ref3.focused,\n          size = _ref3.size;\n      return React.createElement(Ionicons, {\n        name: \"notifications\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  eventIcon: {\n    drawerIcon: function drawerIcon(_ref4) {\n      var focused = _ref4.focused,\n          size = _ref4.size;\n      return React.createElement(Ionicons, {\n        name: \"calendar\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  helpIcon: {\n    drawerIcon: function drawerIcon(_ref5) {\n      var focused = _ref5.focused,\n          size = _ref5.size;\n      return React.createElement(Ionicons, {\n        name: \"help-circle\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  logoutIcon: {\n    drawerIcon: function drawerIcon(_ref6) {\n      var focused = _ref6.focused,\n          size = _ref6.size;\n      return React.createElement(Ionicons, {\n        name: \"log-out\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      });\n    }\n  }\n};\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this2 = this;\n\n  console.log(firebase.auth().currentUser);\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Home\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\",\n        fontSize: 25\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Profile\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Notifications\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\",\n        fontSize: 24\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: \"Event\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HelpStack = createStackNavigator();\n\nfunction HelpNavigator(props) {\n  var _this6 = this;\n\n  return React.createElement(HelpStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, React.createElement(HelpStack.Screen, {\n    name: \"HelpScreen\",\n    component: HelpScreen,\n    options: {\n      headerTitle: \"Help\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  firebase.auth().signOut();\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(DrawerNavigator);","map":{"version":3,"sources":["C:/Users/eivan/Desktop/Spring2021/SE/CSE120/projectcombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","connect","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","HelpScreen","LogoutScreen","Ionicons","firebase","require","Drawer","DrawerNavigator","props","currentUser","console","log","accountType","activeTintColor","labelStyle","fontFamily","color","backgroundColor","HomeNavigator","iconContainer","homeIcon","ProfileNavigator","profileIcon","NotificationNavigator","notificationIcon","EventNavigator","eventIcon","HelpNavigator","helpIcon","LogoutNavigator","logoutIcon","drawerIcon","focused","size","HomeStack","auth","headerTintColor","headerStyle","headerTitle","headerLeft","navigation","toggleDrawer","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerTitleStyle","textAlign","fontSize","ProfileStack","NotificationStack","EventStack","HelpStack","LogoutStack","signOut","headerShown","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport HomeScreen from \"../Screens/HomeScreen\";\r\nimport ProfileScreen from \"../Screens/ProfileScreen\";\r\nimport NotificationScreen from \"../Screens/NotificationScreen\";\r\nimport EventScreen from \"../Screens/EventScreen\";\r\nimport HelpScreen from \"../Screens/HelpScreen\";\r\nimport LogoutScreen from \"../Screens/LogoutScreen\";\r\n\r\nimport {\r\n  DrawerParamList,\r\n  EventParamList,\r\n  HelpParamList,\r\n  HomeParamList,\r\n  LogoutParamList,\r\n  NotificationParamList,\r\n  ProfileParamList,\r\n} from \"../types\";\r\nimport { View, Image, TouchableOpacity, Dimensions } from \"react-native\";\r\n\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nrequire(\"firebase/firestore\");\r\n\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n// const Drawer = createDrawerNavigator();\r\n\r\nfunction DrawerNavigator(props) {\r\n  const { currentUser } = props;\r\n  console.log({ currentUser });\r\n\r\n  if (currentUser.accountType === \"Volunteer\") {\r\n    return (\r\n      <Drawer.Navigator\r\n        drawerContentOptions={{\r\n          activeTintColor: \"red\",\r\n          labelStyle: { fontFamily: \"Verdana\", color: \"#ff6623\" },\r\n        }}\r\n        drawerStyle={{ backgroundColor: \"#fbc956\" }}\r\n      >\r\n        <Drawer.Screen\r\n          name=\"Home\"\r\n          component={HomeNavigator}\r\n          options={iconContainer.homeIcon}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Profile\"\r\n          component={ProfileNavigator}\r\n          options={iconContainer.profileIcon}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Notification\"\r\n          component={NotificationNavigator}\r\n          options={iconContainer.notificationIcon}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Event\"\r\n          component={EventNavigator}\r\n          options={iconContainer.eventIcon}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Help\"\r\n          component={HelpNavigator}\r\n          options={iconContainer.helpIcon}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Logout\"\r\n          component={LogoutNavigator}\r\n          options={iconContainer.logoutIcon}\r\n        />\r\n      </Drawer.Navigator>\r\n    );\r\n  }\r\n  else {\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContentOptions={{\r\n        activeTintColor: \"red\",\r\n        labelStyle: { fontFamily: \"Verdana\", color: \"#ff6623\" },\r\n      }}\r\n      drawerStyle={{ backgroundColor: \"#fbc956\" }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeNavigator}\r\n        options={iconContainer.homeIcon}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Profile\"\r\n        component={ProfileNavigator}\r\n        options={iconContainer.profileIcon}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Notification\"\r\n        component={NotificationNavigator}\r\n        options={iconContainer.notificationIcon}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Event\"\r\n        component={EventNavigator}\r\n        options={iconContainer.eventIcon}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Help\"\r\n        component={HelpNavigator}\r\n        options={iconContainer.helpIcon}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Logout\"\r\n        component={LogoutNavigator}\r\n        options={iconContainer.logoutIcon}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n    }\r\n}\r\n\r\nconst iconContainer = {\r\n  homeIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons name=\"md-home\" size={size} color={focused ? \"red\" : \"tomato\"} />\r\n    ),\r\n  },\r\n  profileIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons\r\n        name=\"person-sharp\"\r\n        size={size}\r\n        color={focused ? \"red\" : \"tomato\"}\r\n      />\r\n    ),\r\n  },\r\n  notificationIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons\r\n        name=\"notifications\"\r\n        size={size}\r\n        color={focused ? \"red\" : \"tomato\"}\r\n      />\r\n    ),\r\n  },\r\n  eventIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons\r\n        name=\"calendar\"\r\n        size={size}\r\n        color={focused ? \"red\" : \"tomato\"}\r\n      />\r\n    ),\r\n  },\r\n  helpIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons\r\n        name=\"help-circle\"\r\n        size={size}\r\n        color={focused ? \"red\" : \"tomato\"}\r\n      />\r\n    ),\r\n  },\r\n  logoutIcon: {\r\n    drawerIcon: ({ focused, size }) => (\r\n      <Ionicons name=\"log-out\" size={size} color={focused ? \"red\" : \"tomato\"} />\r\n    ),\r\n  },\r\n};\r\n\r\nconst HomeStack = createStackNavigator<HomeParamList>();\r\nfunction HomeNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  console.log(firebase.auth().currentUser);\r\n  return (\r\n    <HomeStack.Navigator>\r\n      <HomeStack.Screen\r\n        name=\"HomeScreen\"\r\n        component={HomeScreen}\r\n        options={{\r\n          headerTintColor: \"blue\",\r\n          headerStyle: {\r\n            backgroundColor: \"#8ebaff\",\r\n          },\r\n          headerTitle: \"Home\",\r\n\r\n          headerLeft: () => (\r\n            <View>\r\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\r\n                <Image\r\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get(\"window\").width * 0.06,\r\n                    height: Dimensions.get(\"window\").height * 0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: \"center\",\r\n            fontSize: 25,\r\n          },\r\n        }}\r\n      />\r\n    </HomeStack.Navigator>\r\n  );\r\n}\r\n\r\nconst ProfileStack = createStackNavigator<ProfileParamList>();\r\nfunction ProfileNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    <ProfileStack.Navigator>\r\n      <ProfileStack.Screen\r\n        name=\"ProfileScreen\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          headerTintColor: \"blue\",\r\n          headerStyle: {\r\n            backgroundColor: \"#8ebaff\",\r\n          },\r\n          headerTitle: \"Profile\",\r\n          headerLeft: () => (\r\n            <View>\r\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\r\n                <Image\r\n                  source={require(\"../assets/menu-outline.png\")}\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get(\"window\").width * 0.06,\r\n                    height: Dimensions.get(\"window\").height * 0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: \"center\",\r\n          },\r\n        }}\r\n      />\r\n    </ProfileStack.Navigator>\r\n  );\r\n}\r\n\r\nconst NotificationStack = createStackNavigator<NotificationParamList>();\r\nfunction NotificationNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    <NotificationStack.Navigator>\r\n      <NotificationStack.Screen\r\n        name=\"NotificationScreen\"\r\n        component={NotificationScreen}\r\n        options={{\r\n          headerTintColor: \"blue\",\r\n          headerStyle: {\r\n            backgroundColor: \"#8ebaff\",\r\n          },\r\n          headerTitle: \"Notifications\",\r\n          headerLeft: () => (\r\n            <View>\r\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\r\n                <Image\r\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get(\"window\").width * 0.06,\r\n                    height: Dimensions.get(\"window\").height * 0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n          },\r\n        }}\r\n      />\r\n    </NotificationStack.Navigator>\r\n  );\r\n}\r\n\r\nconst EventStack = createStackNavigator<EventParamList>();\r\nfunction EventNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    <EventStack.Navigator>\r\n      <EventStack.Screen\r\n        name=\"EventScreen\"\r\n        component={EventScreen}\r\n        options={{\r\n          headerTitle: \"Event\",\r\n          headerTintColor: \"blue\",\r\n          headerStyle: {\r\n            backgroundColor: \"#8ebaff\",\r\n          },\r\n          headerLeft: () => (\r\n            <View>\r\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\r\n                <Image\r\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get(\"window\").width * 0.06,\r\n                    height: Dimensions.get(\"window\").height * 0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: \"center\",\r\n          },\r\n        }}\r\n      />\r\n    </EventStack.Navigator>\r\n  );\r\n}\r\n\r\nconst HelpStack = createStackNavigator<HelpParamList>();\r\nfunction HelpNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    <HelpStack.Navigator>\r\n      <HelpStack.Screen\r\n        name=\"HelpScreen\"\r\n        component={HelpScreen}\r\n        options={{\r\n          headerTitle: \"Help\",\r\n          headerTintColor: \"blue\",\r\n          headerStyle: {\r\n            backgroundColor: \"#8ebaff\",\r\n          },\r\n          headerLeft: () => (\r\n            <View>\r\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\r\n                <Image\r\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get(\"window\").width * 0.06,\r\n                    height: Dimensions.get(\"window\").height * 0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: \"center\",\r\n          },\r\n        }}\r\n      />\r\n    </HelpStack.Navigator>\r\n  );\r\n}\r\nconst LogoutStack = createStackNavigator<LogoutParamList>();\r\nfunction LogoutNavigator(props) {\r\n  // if there is an error on 'props' it is fine and working correctly\r\n  firebase.auth().signOut();\r\n  return (\r\n    <LogoutStack.Navigator>\r\n      <LogoutStack.Screen\r\n        name=\"LogoutScreen\"\r\n        component={LogoutScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </LogoutStack.Navigator>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n});\r\nexport default connect(mapStateToProps, null)(DrawerNavigator);"]},"metadata":{},"sourceType":"module"}